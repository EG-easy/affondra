openapi: '3.0.0'
info:
  version: '1.0'
  title: NFT
servers:
  - url: http://192.168.1.160:1317
tags:
  - name: NFT
paths:

  /nft/denoms:
    get:
      summary: Get list of Denoms.
      tags:
      - NFT
      operationId: /nft/denoms
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  height:
                    type: "integer"
                  result:
                    items:
                      type: "string"
                      example: ["denom1", "denom2"]
                  
  /nft/owner/{address}:
    get:
      summary: Get list of NFTs a specified owner have.
      description: Get list of NFTs a specified owner have.
      tags:
        - NFT
      operationId: getNftsByOwner
      parameters:
      - name: "address"
        description: 'An owner address'
        in: "path"
        required: true
        schema:
          type: string
          example: cosmos1gzfwesw9h0yp6pjr32ku4f3f28usezzarrqegh
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  height:
                    type: "integer"
                  result:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                        example: "cosmos-sdk/Owner"
                      value:
                        type: "object"
                        properties:
                          address:
                            type: "string"
                            example: "COSMOS_ADDRESS"
                          idCollections:
                            type: array
                            nullable: true
                            items:
                              type: "object"
                              properties:
                                denom:
                                  type: "string"
                                  example: "DENOM_NAME"
                                ids:
                                  type: "array"
                                  items:
                                    type: "string"
                                    example: ["aaa", "bbb"]
  /nft/owners/collection/{denom}:
    get:
      summary: Get list of NFTs a specified owner have in a specified denom.
      description: Get list of NFTs a specified owner have in a specified denom.
      tags:
        - NFT
      operationId: getNftsByOwnerAndDenom
      parameters:
      - in: "path"
        name: "denom"
        description: 'A NFT denom'
        required: true
        schema:
          type: string
          example: crypto-kitties
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
  /nft/collection/{denom}:
    get:
      summary: Get list of NFTs in a specified denom.
      description: Get list of NFTs in a specified denom.
      tags:
        - NFT
      operationId: getNftsByDenom
      parameters:
      - in: "path"
        name: "denom"
        description: 'A NFT denom'
        required: true
        schema:
          type: string
          example: crypto-kitties
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
  /nft/supply/{denom}:
    get:
      summary: Return total amount of tokens in a specified denom.
      tags:
        - NFT
      operationId: getSupplyByDenom
      deprecated: false
      parameters:
        - in: path
          name: denom
          required: true
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
  /nfts/mint:
    post:
      summary: ---
      tags:
        - NFT
      operationId: /nfts/mint
      deprecated: false
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/nftsMintrequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
  /nfts/transfer:
    post:
      summary: ---
      tags:
        - NFT
      operationId: /nfts/transfer
      deprecated: false
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                denom:
                  type: string
                id:
                  type: string
                recipient:
                  type: string
              required:
              - base_req
              - denom
              - id
              - recipient
            example:
              base_req:
                from: cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
                memo: "Sent from Postman \U0001F680"
                chain_id: voter
                account_number: 0
                sequence: 1
                gas: 200000
                gas_adjustment: 1.2
                fees:
                - denom: token
                  amount: 50
                simulate: false
              denom: MyToken
              id: aaa
              recipient: cosmos1atsc0j4w23derwmv98n72y28vdxsalp4zpcgz2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
  /nfts/collection/{denom}/nft/{nftId}/metadata:
    put:
      summary: ---
      tags:
        - NFT
      operationId: /nfts/collection/crypto-kitties/nft/aaa/metadata
      deprecated: false
      parameters:
      - $ref: '#/components/parameters/denom'
      - $ref: '#/components/parameters/nftId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                denom:
                  type: string
                id:
                  type: string
                tokenURI:
                  type: string
              required:
              - base_req
              - denom
              - id
              - tokenURI
            example:
              base_req:
                from: cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
                memo: "Sent from Postman \U0001F680"
                chain_id: voter
                account_number: 0
                sequence: 1
                gas: 200000
                gas_adjustment: 1.2
                fees:
                - denom: token
                  amount: 50
                simulate: false
              denom: crypto-kitties
              id: aaa
              tokenURI: http://changeurl:8080
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
  /nfts/collection/{denom}/nft/{nftId}/burn:
    put:
      summary: ---
      tags:
        - NFT
      operationId: Burn (delete) a specify NFT.
      parameters:
        - $ref: '#/components/parameters/denom'
        - $ref: '#/components/parameters/nftId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                denom:
                  type: string
                id:
                  type: string
              required:
              - base_req
              - denom
              - id
            example:
              base_req:
                from: cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
                memo: "Sent from Postman \U0001F680"
                chain_id: voter
                account_number: 0
                sequence: 1
                gas: 200000
                gas_adjustment: 1.2
                fees:
                - denom: token
                  amount: 50
                simulate: false
              denom: crypto-kitties
              id: aaa
      responses:
        200:
          description: ''
          headers: {}
components:
  parameters:
    denom:
      name: denom
      in: path
      description: A denom of NFT.
      required: true
      schema:
        type: string
        example: crypto-kitties
    nftId:
      name: nftId
      in: path
      description: A id of NFT.
      required: true
      schema:
        type: string
        example: aaa
  requestBodies:
    nftsMintrequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/components/schemas/BaseReq'
              recipient:
                type: string
              denom:
                type: string
              id:
                type: string
              tokenURI:
                type: string
            required:
            - base_req
            - recipient
            - denom
            - id
            - tokenURI
          example:
            base_req:
              from: cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
              memo: "Sent from Postman \U0001F680"
              chain_id: voter
              account_number: 0
              sequence: 1
              gas: 200000
              gas_adjustment: 1.2
              fees:
              - denom: token
                amount: 50
              simulate: false
            recipient: cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
            denom: MyToken
            id: aaa
            tokenURI: http://localhost:8080
  schemas:
    BaseReq:
      type: object
      properties:
        from:
          type: string
        memo:
          type: string
        chain_id:
          type: string
        account_number:
          type: string
        sequence:
          type: string
        gas:
          type: string
        gas_adjustment:
          type: string
        fees:
          type: array
          items:
            $ref: '#/components/schemas/Fee'
        simulate:
          type: boolean
      required:
      - from
      - memo
      - chain_id
      - account_number
      - sequence
      - gas
      - gas_adjustment
      - fees
      - simulate
      example:
        from: cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
        memo: "Sent from Postman \U0001F680"
        chain_id: voter
        account_number: 0
        sequence: 1
        gas: 200000
        gas_adjustment: 1.2
        fees:
        - denom: token
          amount: 50
        simulate: false
    Fee:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      required:
      - denom
      - amount
      example:
        denom: token
        amount: 50